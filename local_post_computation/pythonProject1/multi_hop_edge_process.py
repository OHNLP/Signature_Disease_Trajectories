# this code is used to process the multi-hop edges generated by the iqvia
# sort the edges by the number of patients
# map the ICD codes into real name
# plot the edges by gephi


import pandas as pd
import numpy as np
import os

cancer_list = {'pancreatic_cancer': 469, 'sarcoma-retroperitoneum': 411, 'sarcoma-trunk_extremities': 383}
file_path = '../../result/post_processing_result/'
unique_nodes_df = pd.read_csv(file_path+'unique_nodes.csv')
for cancer in cancer_list:

    def map_icd_to_string(hop_number, df, code_df):
        new_df = df.copy(deep=True)
        for i in range(1, hop_number+2):
            cur_column = 'd'+str(i)
            new_df = pd.merge(new_df, code_df, how='left', left_on=cur_column, right_on='Id')
            new_column = cur_column+'_name'
            new_df[new_column] = new_df['Label']
            new_df.drop(columns=['Label', 'Id'], inplace=True)

        for i in range(1, hop_number+2):
            concate_column = 'd' + str(i) + '_ICD_name'
            cur_column = 'd' + str(i)
            new_column = cur_column + '_name'

            new_df[concate_column] = new_df[cur_column] + ':' + new_df[new_column]
            new_df.drop(columns=[cur_column, new_column], inplace=True)

        return new_df



    for i in range(2, 4):
        post_file_name = file_path + cancer + '/' + str(i)+'_hop/'+'/post_'+str(i)+'_hop_edge.csv'
        if os.path.exists(post_file_name):
            post_df = pd.read_csv(post_file_name)
            post_df_new = map_icd_to_string(i, post_df, unique_nodes_df)
            post_df_new = post_df_new.sort_index(axis=1)
            post_df_sorted = post_df_new.sort_values(by='num_patient', ascending=False)
            post_df_sorted.to_csv(file_path + cancer + '/' + str(i)+'_hop/'+'/post_full_name_'+str(i)+'_hop_edge.csv', index=False)


        pre_file_name = file_path + cancer + '/' + str(i)+'_hop/'+ '/pre_'+str(i)+'_hop_edge.csv'
        if os.path.exists(pre_file_name):
            pre_df = pd.read_csv(pre_file_name)
            pre_df_new = map_icd_to_string(i, pre_df, unique_nodes_df)
            pre_df_new = pre_df_new.sort_index(axis=1)
            pre_df_sorted = pre_df_new.sort_values(by='num_patient', ascending=False)
            pre_df_sorted.to_csv(file_path + cancer + '/' + str(i) + '_hop/' + '/pre_full_name_' + str(i) + '_hop_edge.csv',
                           index=False)






